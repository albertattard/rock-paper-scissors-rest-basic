package demo.games;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertSame;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@DisplayName( "Game service" )
public class GameServiceTest {

  @Test
  @DisplayName( "should return a random hand based on the random number generated by the service" )
  public void shouldReturnARandomHand() {
    final int numberOfCandidates = Hand.values().length;
    final Hand expectedHand = Hand.ROCK;

    final RandomService randomService = mock( RandomService.class );
    when( randomService.nextInt( eq( numberOfCandidates ) ) ).thenReturn( expectedHand.ordinal() );

    final GameService service = new GameService( randomService );
    final Hand hand = service.random();
    assertSame( expectedHand, hand );

    verify( randomService, times( 1 ) ).nextInt( numberOfCandidates );
  }
}
